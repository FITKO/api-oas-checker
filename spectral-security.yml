#
# See technical recommendations on Italian Guidelines:
#
# https://docs.italia.it/italia/piano-triennale-ict/lg-modellointeroperabilita-docs/it/bozza/doc/profili-di-interazione/regole-comuni-rest-soap.html#raccomandazioni-tecniche-per-rest
#
extends: spectral:oas

rules:
  array-boundaries:
    description: |-
      Arrays should be limited in size to mitigate resource exhaustion
      using `maxItems` and `minItems`.

      If you delegate input validation to a library or framework,
      be sure to test it thoroughly.
    message: Schema of type array must specify maxItems and minItems. {{path}} {{error}}
    formats:
      - oas3
    severity: warn
    recommended: true
    given:
      - $.[?(@.type=="array")]
    then:
      - field: maxItems
        function: defined
      - field: minItems
        function: defined
  number-boundaries:
    description: |-
      Numeric values should be limited in size to mitigate resource exhaustion
      using `maximum` and `minimum`.

      If you delegate input validation to a library or framework,
      be sure to test it thoroughly.
    message: Schema of type number or integer must specify a maximum and a minimum.
      {{path}} {{error}}
    formats:
      - oas3
    severity: warn
    recommended: true
    given:
      - $.[?(@.type=="number")]
      - $.[?(@.type=="integer")]
    then:
      - field: maximum
        function: defined
      - field: minimum
        function: defined
  string-maxlength:
    description: String length should be limited.
    message: Strings (non enum) must specify a maximum length. {{path}} {{error}}
    formats:
      - oas3
    severity: warn
    recommended: true
    given:
      - $.[?(@.type=="string" && !@.enum )]
    then:
      - field: maxLength
        function: defined
  string-pattern-or-format-or-enum:
    description: String values should be constrained.
    message: Strings (non enum) must specify a pattern or a format. {{path}}
    formats:
      - oas3
    severity: hint
    recommended: true
    given:
      - $.[[?( @.type == "string" && !@.enum )]]
    then:
      function: schema
      functionOptions:
        schema:
          type: object
          anyOf:
            - required:
                - pattern
            - required:
                - format
          additionalProperties: true

